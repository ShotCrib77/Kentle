<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Didact+Gothic&display=swap" rel="stylesheet">
  <link href="style.css" rel="stylesheet" type="text/css">'
</head>

<body>
  <header>
    <nav>
      <h1>kentle</h1>
      <h2 class="center-align">How to play?</h2> <!--Add a guide-->
    </nav>
  </header>

  <main>
    <section class="song-info-section" id="page-info">
      <h1 id="main-header" class="center-align">GISSA LÅTEN!</h1>
      <span id="song-num"></span>
      <h2 class="album-text center-align" id="album-heading">Albumbild</h2>
      <section class="cover-container center-align" id="album-cover">
        <div class="cover-square">
          <img id="album-image" src="Album/Kent.jpg" alt="Cover"> <!-- Add the Correct name of the cover???? AND the correct name of the cover (variable)-->
          <span id="cover-questionmark">?</span>
        </div>
      </section>
    </section>
    
    <section class="play-button-section center-align">
      <button class="play-button " id="play-song"><img class="play-button-image" src="images/playbutton.png"></button>
    </section>

    <section class="search-song-section center-align"> <!-- Finns det något annat än div som jag kan använda i det här fallet? (Försökte <form> men det hade mycket preset CSS)-->
      <div class="search-container">
        <input type="text" id="guess-1" name="song" list="songs" autocomplete="off" placeholder="Gissa låten" class="song-input">
        <datalist id="songs"></datalist>
      </div>
      <span class="feedback" id="feedback-1">+8s!</span>
      <div class="search-container">
        <input type="text" id="guess-2" name="song" list="songs" autocomplete="off" placeholder="Gissa låten" class="song-input" readonly="ture">
        <datalist id="songs"></datalist>
      </div>
      <span class="feedback" id="feedback-2">Albumbild!<br>+5s!</span>
      <div class="search-container">
        <input type="text" id="guess-3" name="song" list="songs" autocomplete="off" placeholder="Gissa låten" class="song-input" readonly="ture">
        <datalist id="songs"></datalist>
      </div>
      <span class="feedback" id="feedback-3">Mitten av låten (1m in)<br>+5s</span>
      <div class="search-container">
        <input type="text" id="guess-4" name="song" list="songs" autocomplete="off" placeholder="Gissa låten" class="song-input" readonly="ture">
        <datalist id="songs"></datalist>
      </div>
    </section>
    
    <section class="results-section center-align" id="results-section"> <!--Är det ok att döpa båda samma sak i det här fallet?-->
      <span id="answer"></span>
      <span id="point-score">Poäng: 0</span>
      <span tabindex="1" id="next-question-button">Next song!</span>
    </section>

    <section class="leaderboard-section" id="leaderboard-section"> <!-- * -->
        <div id="header">
          <h1>Leaderboard</h1>
        </div>
        <div id="leaderboard">
          <div class="ribbon"></div>
          <table>
            <tr id="p1">
              <td class="number">1</td>
              <td class="name">Lil Sprout</td>
              <td class="points">
                2000 <img class="gold-medal" src="https://github.com/malunaridev/Challenges-iCodeThis/blob/master/4-leaderboard/assets/gold-medal.png?raw=true" alt="gold medal"/>
              </td>
            </tr>

            <tr id="p2">
              <td class="number">2</td>
              <td class="name">Philip Jansson</td>
              <td class="points">1600</td>
            </tr>

            <tr id="p3">
              <td class="number">3</td>
              <td class="name">Zixuan Huang</td>
              <td class="points">1550</td>
            </tr>
            
            <tr id="p4">
              <td class="number">4</td>
              <td class="name">A</td>
              <td class="points">450</td>
            </tr>

            <tr id="p5">
              <td class="number">5</td>
              <td class="name">Emanuel Hed</td>
              <td class="points">200</td>
            </tr>

          </table>
          <div id="buttons">
            <button class="exit" id="play-again">Play Again</button>
            <button class="continue" id="submit-results">Submit Score</button>
          </div>
        </div>
        <input type="text", placeholder="Skriv in ditt användarnamn" id="player-name" class="username">
    </section>
  </main>

  <script>
    const songList = document.getElementById("songs");
    const songFile = "songs.txt";

    fetch(songFile, { encoding: "utf-8" })
      .then(response => response.text())
      .then(data => {
        const songs = data.split("\n").map(song => song.trim());
        songs.forEach(song => {
          const option = document.createElement("option");
          option.value = song;
          songList.appendChild(option);
        });
      });

    const get_song = document.getElementById("get-song");
    let maxDuration;
    let songPath;
    let correctSongName;
    let audio;

    function getNewSong() {
        async function getRandomFile() {
          try {
            const response = await fetch('http://localhost:3000/getRandomFile'); // Send a request to the server
            const filePath = await response.text(); // Get the file path from the response
            console.log("Random file path:", filePath);
            return filePath;
            // Use the file path here (e.g., play the audio, display an image, etc.)
          } catch (error) {
            console.error("Error fetching random file:", error);
          }
        }
        console.log("File -> Audio");
        getRandomFile().then((path) => {
          songPath = path;
          audio = new Audio(songPath);
          audio.volume = 0.15;
          correctSongName = songPath.split('\\').pop().split('.').shift();
          console.log("Audio :->");
        });
        
        maxDuration = 7;
    }
    
    function nextSong() {
      getNewSong();
      guessCount = 0;
      albumImage.style.display = "none";
      coverQuestionmark.style.display = "block";
      
      for (const item of displayNoneList) {
        item.style.display = "none";
      }

      for (const guess of guessList) {
        guess.style.background = "#F6F6F6";
        guess.value = "";
        guess.readOnly = true;
      }
      guess1.readOnly = false;
      
      songNumberValue.textContent = "Låt: " + songNumber + "/5";
      pointScore.textContent = "Poäng: " + playerScore;
    }

    const play = document.getElementById("play-song");
    const songNumberValue = document.getElementById("song-num");

    function playMusic() {
      audio.play();
      audio.addEventListener("timeupdate", function() {
        if (audio.currentTime > maxDuration) {
          audio.pause();
          audio.currentTime = 0;
        };
      });
    }
    
    const guess1 = document.getElementById("guess-1");
    const guess2 = document.getElementById("guess-2");
    const guess3 = document.getElementById("guess-3");
    const guess4 = document.getElementById("guess-4");
    const nextButton = document.getElementById("next-question-button");
    const pointScore = document.getElementById("point-score");
    const answer = document.getElementById("answer");
    const feedback_1 = document.getElementById("feedback-1");
    const feedback_2 = document.getElementById("feedback-2");
    const feedback_3 = document.getElementById("feedback-3");
    
    const mainHeader = document.getElementById("main-header");
    const hiddenSquare = document.getElementById("album-cover");
    const textAlbum = document.getElementById("album-heading");
    const webbInfo = document.getElementById("page-info");
    const pointsSection = document.getElementById("results-section");
    const mainSection = document.querySelector('main');
    const childElements = mainSection.childNodes;
    const leaderboard = document.getElementById("leaderboard-section");
    const displayNoneList = [feedback_1, feedback_2, feedback_3, nextButton, pointScore, answer];
    const guessList = [guess1, guess2, guess3, guess4];
    nextButton.addEventListener("click", function() {
      audio.pause();
      if (songNumber <= 5) {
        nextSong();
      }
      else {
        childElements.forEach(function(child) {
          // Check if the node is an element node (nodeType 1)
          if (child.nodeType === 1) {
              child.style.display = 'none';
          }
      });

        leaderboard.style.display = "flex";
        pointsSection.style.display = "flex";
        pointsSection.style.justifyContent = "flex-start";
        answer.style.display = "none";
        nextButton.style.display = "none";
        webbInfo.style.display = "block";
        songNumberValue.style.display = "none";
        textAlbum.style.display = "none";
        hiddenSquare.style.display = "none";
        mainHeader.textContent = "Din Poängsumma!";
        
      }
    });

    function resetScale() {
      play.style.transform = "scale(1)";
    }

    function animateButton() {
      play.style.transform = "scale(0.9)";
    
      setTimeout(resetScale, 100);
    }

    play.addEventListener("click", function() {
      animateButton();
      playMusic();
    });
    


    const albumImage = document.getElementById("album-image");
    const coverQuestionmark = document.getElementById("cover-questionmark");
    const songNameInputs = document.getElementsByClassName("song-input");
    let guessCount;
    let playerScore = 0;
    let songNumber = 1;
    Array.from(songNameInputs).forEach(input => {
      input.addEventListener('keydown', function(e) {
        if (e.key === "Enter" || e.key === "Done" || e.key === "Go") {
          let inputValue = input.value;
          console.log(inputValue);
          if (inputValue.length != 0) {
            input.readOnly = true;
            if (inputValue.toLowerCase() === correctSongName.toLowerCase()) {
              input.style.backgroundColor = "#65B163";
              songNumber += 1;

              if (guessCount === 0) {
                playerScore += 400;
              }
            
              if (guessCount === 1) {
                playerScore += 350;
              }
            
              if (guessCount === 2) {
                playerScore += 300;
              }

              if (guessCount === 3){
                playerScore += 200;
              }
              pointScore.textContent = "Poäng: " + playerScore;
              pointScore.style.display = "block";
              nextButton.style.display = "block";
              audio.pause();
            }

            else {
              input.style.backgroundColor = "#BBBBBB";
              guessCount += 1;
              if (guessCount === 1) {
                maxDuration += 8;
                guess2.readOnly = false;
                audio.currentTime = 0;
                feedback_1.style.display = "block";
              }
              else if (guessCount === 2) {
                maxDuration += 5;
                albumImage.style.display = "block";
                coverQuestionmark.style.display = "none";
                guess3.readOnly = false;
                audio.currentTime = 0;
                feedback_2.style.display = "block";
              }
              else if (guessCount === 3) {
                guess4.readOnly = false;
                audio.currentTime = 60;
                maxDuration += (60 + 5);
                feedback_3.style.display = "block";
              }
              else if (guessCount === 4) {
                songNumber += 1;
                pointScore.textContent = "Poäng: " + playerScore;
                answer.textContent = "Svar:\n" + correctSongName;
                pointScore.style.display = "block";
                answer.style.display = "block";
                nextButton.style.display = "block";
              }
              audio.pause();
            }
    

          }

        }
      });
    });
    
    nextSong();


    const place1 = document.getElementById("p1");
    const name1 = place1.querySelector(".name").textContent;
    const points1 = place1.querySelector(".points").textContent.trim();

    const place2 = document.getElementById("p2");
    const name2 = place2.querySelector(".name").textContent;
    const points2 = place2.querySelector(".points").textContent.trim();

    const place3 = document.getElementById("p3");
    const name3 = place3.querySelector(".name").textContent;
    const points3 = place3.querySelector(".points").textContent.trim();

    const place4 = document.getElementById("p4");
    const name4 = place4.querySelector(".name").textContent;
    const points4 = place4.querySelector(".points").textContent.trim();

    const place5 = document.getElementById("p5");
    const name5 = place5.querySelector(".name").textContent;
    const points5 = place5.querySelector(".points").textContent.trim();

    const playerName = document.getElementById("player-name");
    const playAgain = document.getElementById("play-again");
    const submit = document.getElementById("submit-results");

    playAgain.addEventListener("click", function() {
      replay();
    });
    

    // Väldigt "fult" kan säkert göras med mindre kod
    submit.addEventListener("click", function() {
      if (playerName.value !== '' || playerName.value !== undefined) {
        if (points1 < playerScore) {
          place5.querySelector(".points").textContent = place4.querySelector(".points").textContent;
          place5.querySelector(".name").textContent = place4.querySelector(".name").textContent;
          place4.querySelector(".points").textContent = place3.querySelector(".points").textContent;
          place4.querySelector(".name").textContent = place3.querySelector(".name").textContent;
          place3.querySelector(".points").textContent = place2.querySelector(".points").textContent;
          place3.querySelector(".name").textContent = place2.querySelector(".name").textContent;
          place2.querySelector(".points").textContent = place1.querySelector(".points").textContent;
          place2.querySelector(".name").textContent = place1.querySelector(".name").textContent;

          place1.querySelector(".points").textContent = String(playerScore);
          place1.querySelector(".name").textContent = playerName.value;

          console.log("Updated place 1");
      } else if (points2 < playerScore) {

          place5.querySelector(".points").textContent = place4.querySelector(".points").textContent;
          place5.querySelector(".name").textContent = place4.querySelector(".name").textContent;
          place4.querySelector(".points").textContent = place3.querySelector(".points").textContent;
          place4.querySelector(".name").textContent = place3.querySelector(".name").textContent;
          place3.querySelector(".name").textContent = place2.querySelector(".name").textContent;
          place3.querySelector(".points").textContent = place2.querySelector(".points").textContent;

          place2.querySelector(".points").textContent = String(playerScore);
          place2.querySelector(".name").textContent = playerName.value;

          console.log("Updated place 2");
      } else if (points3 < playerScore) {

          place5.querySelector(".points").textContent = place4.querySelector(".points").textContent;
          place5.querySelector(".name").textContent = place4.querySelector(".name").textContent;
          place4.querySelector(".points").textContent = place3.querySelector(".points").textContent;
          place4.querySelector(".name").textContent = place3.querySelector(".name").textContent;

          place3.querySelector(".points").textContent = String(playerScore);
          place3.querySelector(".name").textContent = playerName.value;

          console.log("Updated place 3");
      } else if (points4 < playerScore) {
          
          place5.querySelector(".points").textContent = place4.querySelector(".points").textContent;
          place5.querySelector(".name").textContent = place4.querySelector(".name").textContent;

          place4.querySelector(".points").textContent = String(playerScore);
          place4.querySelector(".name").textContent = playerName.value;

          console.log("Updated place 4");
      } else if (points5 < playerScore) {
          place5.querySelector(".points").textContent = String(playerScore);
          place5.querySelector(".name").textContent = playerName.value;
          console.log("Updated place 5");
      }
      }
    });
    

    function replay() {
      playerScore = 0;
      songNumber = 1;

      childElements.forEach(function(child) {
        // Check if the node is an element node (nodeType 1)
        if (child.nodeType === 1) {
            child.style.display = 'flex';
        }
      });

      leaderboard.style.display = "none";
      pointsSection.style.display = "flex";
      pointsSection.style.justifyContent = "center";
      answer.style.display = "block";
      nextButton.style.display = "block";
      webbInfo.style.display = "block";
      songNumberValue.style.display = "block";
      textAlbum.style.display = "flex";
      hiddenSquare.style.display = "flex";
      mainHeader.textContent = "Gissa Låten!";

      nextSong();
    }

    
</script>
</body>

</html>