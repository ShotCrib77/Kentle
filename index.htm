<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Didact+Gothic&display=swap" rel="stylesheet">
  <link href="style.css" rel="stylesheet" type="text/css">
</head>

<body>
  <header>
    <nav>
      <h1>kentle</h1>
      <h2 class="center-align">How to play?</h2> <!--Add a guide-->
    </nav>
  </header>

  <main>
    <section class="song-info-section" id="page-info">
      <h1 id="main-header" class="center-align">GISSA LÅTEN!</h1>
      <span id="song-num"></span>
      <h2 class="album-text center-align" id="album-heading">Albumbild</h2>
      <section class="cover-container center-align" id="album-cover">
        <div class="cover-square">
          <img id="album-image" src="" alt="Cover"> <!-- Add the Correct name of the cover???? AND the correct name of the cover (variable)-->
          <span id="cover-questionmark">?</span>
        </div>
      </section>
    </section>
    
    <section class="play-button-section center-align">
      <button class="play-button " id="play-song"><img class="play-button-image" src="images/playbutton.png"></button>
    </section>

    <section class="search-song-section center-align"> <!-- Finns det något annat än div som jag kan använda i det här fallet? (Försökte <form> men det hade mycket preset CSS)-->
      <div class="search-container">
        <input type="text" id="guess-1" name="song" list="songs" autocomplete="off" placeholder="Gissa låten" class="song-input">
        <datalist id="songs"></datalist>
      </div>
      <span class="feedback" id="feedback-1">+8s!</span>
      <div class="search-container">
        <input type="text" id="guess-2" name="song" list="songs" autocomplete="off" placeholder="Gissa låten" class="song-input" readonly="ture">
        <datalist id="songs"></datalist>
      </div>
      <span class="feedback" id="feedback-2">Albumbild!<br>+5s!</span>
      <div class="search-container">
        <input type="text" id="guess-3" name="song" list="songs" autocomplete="off" placeholder="Gissa låten" class="song-input" readonly="ture">
        <datalist id="songs"></datalist>
      </div>
      <span class="feedback" id="feedback-3">Mitten av låten (1m in)<br>+5s</span>
      <div class="search-container">
        <input type="text" id="guess-4" name="song" list="songs" autocomplete="off" placeholder="Gissa låten" class="song-input" readonly="ture">
        <datalist id="songs"></datalist>
      </div>
    </section>
    
    <section class="results-section center-align" id="results-section"> <!--Är det ok att döpa båda samma sak i det här fallet?-->
      <span id="answer"></span>
      <span id="point-score">Poäng: 0</span>
      <span tabindex="1" id="next-question-button">Next song!</span>
    </section>

    <section class="leaderboard-section" id="leaderboard-section"> <!-- * -->
        <div id="header">
          <h1>Leaderboard</h1>
        </div>
        <div id="leaderboard">
          <div class="ribbon"></div>
          <table>
            <tr id="p1">
              <td class="number">1</td>
              <td class="name">Lil Sprout</td>
              <td class="points">
                2000 <img class="gold-medal" src="https://github.com/malunaridev/Challenges-iCodeThis/blob/master/4-leaderboard/assets/gold-medal.png?raw=true" alt="gold medal"/>
              </td>
            </tr>

            <tr id="p2">
              <td class="number">2</td>
              <td class="name">Philip Jansson</td>
              <td class="points">1600</td>
            </tr>

            <tr id="p3">
              <td class="number">3</td>
              <td class="name">Zixuan Huang</td>
              <td class="points">1550</td>
            </tr>
            
            <tr id="p4">
              <td class="number">4</td>
              <td class="name">A</td>
              <td class="points">450</td>
            </tr>

            <tr id="p5">
              <td class="number">5</td>
              <td class="name">Emanuel Hed</td>
              <td class="points">200</td>
            </tr>

          </table>
          <div id="buttons">
            <button class="exit" id="play-again">Play Again</button>
            <button class="continue" id="submit-results">Submit Score</button>
          </div>
        </div>
        <input type="text", placeholder="Skriv in ditt användarnamn" id="player-name" class="username">
    </section>
  </main>

  <script>
    const songList = document.getElementById("songs");

    function addTracksToDatalist(data, dataList) {
      if (Array.isArray(data)) {
          // If data is an array, treat it as a single list of tracks
          data.forEach(track => {
              const option = document.createElement("option");
              option.value = track;
              dataList.appendChild(option);
          });
      } else {
          // If data is an object, iterate over each album
          for (let album in data) {
              if (data.hasOwnProperty(album)) {
                  data[album].forEach(track => {
                      const option = document.createElement("option");
                      option.value = track;
                      dataList.appendChild(option);
                  });
              }
          }
      }
    }

    const get_song = document.getElementById("get-song");
    let maxDuration;
    let songPath;
    let correctSongName;
    let audio;

    function getNewSong() { 
        async function getRandomFile() {
          try {
            const response = await fetch('http://localhost:3000/getRandomFile'); // Skickar en "request" från Node servern
            const filePath = await response.text(); // Får filen (väntar på att response får en fil från fetch)
            console.log("Random file path:", filePath);
            return filePath;
          } catch (error) {
            console.error("Error fetching random file:", error);
          }
        }

        getRandomFile().then((path) => {
          songPath = path;
          audio = new Audio(songPath);
          audio.volume = 0.15;
          correctSongName = songPath.split('\\').pop().split('.').shift(); // Gör om file pathen till en string med endast sång namnet (music/Blåjeans.mp3 -> Blåjeans)
        });
        
        maxDuration = 7; // För låten att spelas upp (under första "lyssningen")
    }
    
    function nextSong() { //Konfiguerar vad som ska slutas visas / visas och resetas när man trycker på "next song" knappen.
      getNewSong();
      songList.innerHTML = "";
      addTracksToDatalist(albums, songList);
      previousGuesses = [];
      guessCount = 0;
      albumImage.style.display = "none";
      coverQuestionmark.style.display = "block";
      
      for (const item of displayNoneList) {
        item.style.display = "none";
      }

      for (const guess of guessList) {
        guess.style.background = "#F6F6F6";
        guess.value = "";
        guess.readOnly = true;
      }
      guess1.readOnly = false;
      
      songNumberValue.textContent = "Låt: " + songNumber + "/5";
      pointScore.textContent = "Poäng: " + playerScore;
    }

    const play = document.getElementById("play-song");
    const songNumberValue = document.getElementById("song-num");

    function playMusic() {
      audio.play();
      audio.addEventListener("timeupdate", function() {
        if (audio.currentTime > maxDuration) { //ifall musiken överskrider maxduration så kommer den pausas och resetas till 0s så att man kan lyssna på den igen
          audio.pause();
          audio.currentTime = 0;
        };
      });
    }
    
    const guess1 = document.getElementById("guess-1");
    const guess2 = document.getElementById("guess-2");
    const guess3 = document.getElementById("guess-3");
    const guess4 = document.getElementById("guess-4");
    const nextButton = document.getElementById("next-question-button");
    const pointScore = document.getElementById("point-score");
    const answer = document.getElementById("answer");
    const feedback_1 = document.getElementById("feedback-1");
    const feedback_2 = document.getElementById("feedback-2");
    const feedback_3 = document.getElementById("feedback-3");
    
    const mainHeader = document.getElementById("main-header");
    const hiddenSquare = document.getElementById("album-cover");
    const textAlbum = document.getElementById("album-heading");
    const webbInfo = document.getElementById("page-info");
    const pointsSection = document.getElementById("results-section");
    const mainSection = document.querySelector('main');
    const childElements = mainSection.childNodes;
    const leaderboard = document.getElementById("leaderboard-section");
    const displayNoneList = [feedback_1, feedback_2, feedback_3, nextButton, pointScore, answer];
    const guessList = [guess1, guess2, guess3, guess4];

    nextButton.addEventListener("click", function() {
      audio.pause();
      if (songNumber <= 5) {
        nextSong();
      }
      else { // Ifall man har gissat på 5 sånger så kommer allt bli display "none" och leaderboard m.m kommer visas istället.
        childElements.forEach(function(child) {

          if (child.nodeType === 1) {
              child.style.display = 'none';
          }
      });

        leaderboard.style.display = "flex";
        pointsSection.style.display = "flex";
        pointsSection.style.justifyContent = "flex-start";
        answer.style.display = "none";
        nextButton.style.display = "none";
        webbInfo.style.display = "block";
        songNumberValue.style.display = "none";
        textAlbum.style.display = "none";
        hiddenSquare.style.display = "none";
        mainHeader.textContent = "Din Poängsumma!";
        
      }
    });

    function resetScale() {
      play.style.transform = "scale(1)";
    }

    function animateButton() { // Gör så att playbutton  blir mindre när man har tryckt på den (så att man vet att man har tryckt på den)
      play.style.transform = "scale(0.9)";
    
      setTimeout(resetScale, 100);
    }

    play.addEventListener("click", function() {
      animateButton();
      playMusic();
    });
    


    const albumImage = document.getElementById("album-image");
    const coverQuestionmark = document.getElementById("cover-questionmark");
    const songNameInputs = document.getElementsByClassName("song-input");
    let guessCount;
    let playerScore = 0;
    let songNumber = 1;
    let previousGuesses = [];
    Array.from(songNameInputs).forEach(input => { // Huvudsakliga functionerna för att spelet ska fungera
      input.addEventListener("keydown", function(e) {
        if (e.key === "Enter" || e.key === "Done" || e.key === "Go") { // Fungerar för iPhone och Android (Ifall man hade en server som filen kunde hämtas från)
          let inputValue = input.value;
          console.log(inputValue);
          if (!previousGuesses.includes(inputValue) && inputValue.length != 0) {
            previousGuesses.push(inputValue)
            input.readOnly = true;
            if (inputValue.toLowerCase() === correctSongName.toLowerCase()) {
              input.style.backgroundColor = "#65B163";
              songNumber += 1;

              if (guessCount === 0) {
                playerScore += 400;
              }
            
              if (guessCount === 1) {
                playerScore += 350;
              }
            
              if (guessCount === 2) {
                playerScore += 300;
              }

              if (guessCount === 3){
                playerScore += 200;
              }

              pointScore.textContent = "Poäng: " + playerScore;
              pointScore.style.display = "block";
              nextButton.style.display = "block";
              audio.pause();
            }

            else {
              input.style.backgroundColor = "#BBBBBB";
              guessCount += 1;
              if (guessCount === 1) { // Första gången man har fel 
                maxDuration += 8;
                guess2.readOnly = false;
                audio.currentTime = 0;
                feedback_1.style.display = "block";
              }
              else if (guessCount === 2) { // Andra o.s.v
                getAlbumCover()
                maxDuration += 5;
                albumImage.style.display = "block";
                coverQuestionmark.style.display = "none";
                guess3.readOnly = false;
                audio.currentTime = 0;
                feedback_2.style.display = "block";
              }
              else if (guessCount === 3) {
                guess4.readOnly = false;
                audio.currentTime = 60;
                maxDuration += (60 + 5);
                feedback_3.style.display = "block";
              }
              else if (guessCount === 4) {
                songNumber += 1;
                pointScore.textContent = "Poäng: " + playerScore;
                answer.textContent = "Svar:\n" + correctSongName;
                pointScore.style.display = "block";
                answer.style.display = "block";
                nextButton.style.display = "block";
              }
              audio.pause();
            }
    

          }

        }
      });
    });
    
    const place1 = document.getElementById("p1");
    const name1 = place1.querySelector(".name").textContent;
    const points1 = place1.querySelector(".points").textContent.trim();

    const place2 = document.getElementById("p2");
    const name2 = place2.querySelector(".name").textContent;
    const points2 = place2.querySelector(".points").textContent.trim();

    const place3 = document.getElementById("p3");
    const name3 = place3.querySelector(".name").textContent;
    const points3 = place3.querySelector(".points").textContent.trim();

    const place4 = document.getElementById("p4");
    const name4 = place4.querySelector(".name").textContent;
    const points4 = place4.querySelector(".points").textContent.trim();

    const place5 = document.getElementById("p5");
    const name5 = place5.querySelector(".name").textContent;
    const points5 = place5.querySelector(".points").textContent.trim();

    const playerName = document.getElementById("player-name");
    const playAgain = document.getElementById("play-again");
    const submit = document.getElementById("submit-results");

    playAgain.addEventListener("click", function() {
      replay();
    });
    

    // Väldigt "fult" kan säkert göras med mindre kod
    submit.addEventListener("click", function() { // Funktion för att kunna submita sitt resultat till leaderboarden
      if (playerName.value !== '' || playerName.value !== undefined) {
        if (points1 < playerScore) {
          place5.querySelector(".points").textContent = place4.querySelector(".points").textContent;
          place5.querySelector(".name").textContent = place4.querySelector(".name").textContent;
          place4.querySelector(".points").textContent = place3.querySelector(".points").textContent;
          place4.querySelector(".name").textContent = place3.querySelector(".name").textContent;
          place3.querySelector(".points").textContent = place2.querySelector(".points").textContent;
          place3.querySelector(".name").textContent = place2.querySelector(".name").textContent;
          place2.querySelector(".points").textContent = place1.querySelector(".points").textContent;
          place2.querySelector(".name").textContent = place1.querySelector(".name").textContent;

          place1.querySelector(".points").textContent = String(playerScore);
          place1.querySelector(".name").textContent = playerName.value;

          console.log("Updated place 1");
      } else if (points2 < playerScore) {

          place5.querySelector(".points").textContent = place4.querySelector(".points").textContent;
          place5.querySelector(".name").textContent = place4.querySelector(".name").textContent;
          place4.querySelector(".points").textContent = place3.querySelector(".points").textContent;
          place4.querySelector(".name").textContent = place3.querySelector(".name").textContent;
          place3.querySelector(".name").textContent = place2.querySelector(".name").textContent;
          place3.querySelector(".points").textContent = place2.querySelector(".points").textContent;

          place2.querySelector(".points").textContent = String(playerScore);
          place2.querySelector(".name").textContent = playerName.value;

          console.log("Updated place 2");
      } else if (points3 < playerScore) {

          place5.querySelector(".points").textContent = place4.querySelector(".points").textContent;
          place5.querySelector(".name").textContent = place4.querySelector(".name").textContent;
          place4.querySelector(".points").textContent = place3.querySelector(".points").textContent;
          place4.querySelector(".name").textContent = place3.querySelector(".name").textContent;

          place3.querySelector(".points").textContent = String(playerScore);
          place3.querySelector(".name").textContent = playerName.value;

          console.log("Updated place 3");
      } else if (points4 < playerScore) {
          
          place5.querySelector(".points").textContent = place4.querySelector(".points").textContent;
          place5.querySelector(".name").textContent = place4.querySelector(".name").textContent;

          place4.querySelector(".points").textContent = String(playerScore);
          place4.querySelector(".name").textContent = playerName.value;

          console.log("Updated place 4");
      } else if (points5 < playerScore) {
          place5.querySelector(".points").textContent = String(playerScore);
          place5.querySelector(".name").textContent = playerName.value;
          console.log("Updated place 5");
      }
      }
    });
    

    function replay() {
      playerScore = 0;
      songNumber = 1;

      childElements.forEach(function(child) {
        // Gör så att allting som tidigare blivit "display:none;" blir synligt igen samt "display:none;:ar" allting leaderboard relaterat.
        if (child.nodeType === 1) {
            child.style.display = 'flex';
        }
      });

      leaderboard.style.display = "none";
      pointsSection.style.display = "flex";
      pointsSection.style.justifyContent = "center";
      answer.style.display = "block";
      nextButton.style.display = "block";
      webbInfo.style.display = "block";
      songNumberValue.style.display = "block";
      textAlbum.style.display = "flex";
      hiddenSquare.style.display = "flex";
      mainHeader.textContent = "Gissa Låten!";

      nextSong();
    }

    const albums = {
      kent: [
          "Blåjeans",
          "Som vatten",
          "Ingenting någonsin",
          "När det blåser på månen",
          "Jag vill inte vara rädd",
          "Vad två öron klarar",
          "Den osynlige mannen",
          "Pojken med hålet i handen",
          "Ingen kommer att tro dig",
          "Stenbrott",
          "Frank"
      ],
      verkligen: [
          "Avtryck",
          "Kräm (så nära får ingen gå)",
          "Gravitation",
          "Istället för ljud",
          "10 minuter (för mig själv)",
          "En timme en minut",
          "Indianer",
          "Halka",
          "Thinner",
          "Vi kan väl vänta tills imorgon"
      ],
      isola: [
          "Livräddaren",
          "Om du var här",
          "Saker man ser",
          "Oprofessionell",
          "OWC",
          "Celsius",
          "Bianca",
          "Innan allting tar slut",
          "Elvis",
          "Glider",
          "747",
          "Velvet"
      ],
      hagnestaHill: [
          "Kungen är död",
          "Revolt III",
          "Musik Non Stop",
          "Kevlarsjäl",
          "Ett tidsfördriv att dö för",
          "Stoppa mig juni (Lilla ego)",
          "En himmelsk drog",
          "Stanna hos mig",
          "Cowboys",
          "Beskyddaren",
          "Berg & dalvana",
          "Insekter",
          "Visslaren"
      ],
      bSidor9500: [
          "Chans",
          "Spökstad",
          "Längtan skala 3:1",
          "Om gyllene år",
          "Noll",
          "Önskar att någon…",
          "Bas riff",
          "Din skugga",
          "Elever",
          "Längesen vi sågs",
          "December",
          "Utan dina andetag",
          "På nära håll",
          "Livrädd med stil",
          "Verkligen",
          "Gummiband",
          "Att presentera ett svin",
          "En helt ny karriär",
          "Rödljus",
          "Kallt kaffe",
          "Slutsats",
          "Rödljus II",
          "En helt ny karriär II"
      ],
      vapenAmmunition: [
          "Sundance Kid",
          "Pärlor",
          "Dom andra",
          "Duett",
          "Hur jag fick dig att älska mig",
          "Kärleken väntar",
          "Socker",
          "FF",
          "Elite",
          "Sverige"
      ],
      vinterNoll2: [
          "VinterNoll2"
      ],
      duJagDoden: [
          "400 slag",
          "Du är ånga",
          "Den döda vinkeln",
          "Du var min armé",
          "Palace & Main",
          "Järnspöken",
          "Klåparen",
          "Max 500",
          "Romeo återvänder ensam",
          "Rosor & palmblad",
          "Mannen i den vita hatten (16 år senare)"
      ],
      tillbakaTillSamtiden: [
          "Elefanter",
          "Berlin",
          "Ingenting",
          "Vid din sida",
          "Columbus",
          "Sömnen",
          "Vy från ett luftslott",
          "Våga vara rädd",
          "LSD, någon?",
          "Generation ex",
          "Ensammast i Sverige"
      ],
      rod: [
          "18:29-4",
          "Taxmannen",
          "Krossa allt",
          "Hjärta",
          "Sjukhus",
          "Vals för satan (din vän pessimisten)",
          "Idioter",
          "Svarta linjer",
          "Ensamheten",
          "Töntarna",
          "Det finns inga ord"
      ],
      enPlatsISolen: [
          "Glasäpplen",
          "Ismael",
          "Skisser för sommaren",
          "Ärlighet respekt kärlek",
          "Varje gång du möter min blick",
          "Ensam lång väg hem",
          "Team Building",
          "Gamla Ullevi",
          "Minimalen",
      ],
      jagArInteRaddForMorkret: [
          "999",
          "Petroleum",
          "Isis & Bast",
          "Jag ser dig",
          "Tänd på",
          "Beredd på allt",
          "Ruta 1",
          "Färger på natten",
          "Låt dom komma",
          "Hänsyn"
      ],
      tigerdrottningen: [
          "Mirage",
          "Var är vi nu?",
          "Skogarna",
          "La Belle Epoque",
          "Svart snö",
          "Allt har sin tid",
          "Innan himlen faller ner",
          "Din enda vän",
          "Godhet (Ft. Beatrice Eli)",
          "Simmaren",
          "Den andra sidan"
      ],
      egoist: [
      "Egoist"
      ],
      daSomNuForAlltid: [
          "Andromeda",
          "Tennsoldater",
          "Vi är för alltid",
          "Den vänstra stranden",
          "Nattpojken & Dagflickan (Ft. Anna Ternheim)",
          "Vi är inte längre där",
          "Förlåtelsen",
          "Skyll inte ifrån dig",
          "Gigi",
          "Falska profeter",
          "Den sista sången"
      ]
    };
    
    function getAlbumCover() { // Hämtar rätt albumbild samt gör om datalistan så att den endast har låtarna tillhörandes det albumet!
      for (const [albumName, songs] of Object.entries(albums)) {
        if (songs.map(song => song.toLowerCase()).includes(correctSongName.toLowerCase())) {
            albumImage.src = `Album/${albumName}.jpg`;
            let dataListAlbum = albums[albumName]
            songList.innerHTML = "";
            addTracksToDatalist(dataListAlbum, songList)
            break;
        };
      };
    };
    addTracksToDatalist(albums, songList);
    nextSong();
  </script>
</body>

</html>